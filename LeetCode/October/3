class Solution {
    public int minSubarray(int[] nums, int p) {
      int total=0;
      for(int i=0;i<nums.length;i++){
         total = (total + nums[i]) % p;
      }
       int remainder = total % p;
       if(remainder ==0 ){
        return 0;
       }
       int minLength = nums.length;
       int sum =0;
       HashMap<Integer, Integer> mp = new HashMap<>();
       mp.put(0,-1);
       for(int i=0 ;i<nums.length;i++){
          sum = (sum + nums[i]) % p;
          int target = (sum - remainder + p) % p;

          if(mp.containsKey(target)){
             minLength = Math.min(minLength , i - mp.get(target));
          }
          mp.put(sum , i);
       }

       return minLength==nums.length?-1:minLength;
    }
}
