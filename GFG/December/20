

class Solution {
    // Function to return a list of integers denoting spiral traversal of matrix.
    public ArrayList<Integer> spirallyTraverse(int matrix[][]) {
        // code here
        int row = matrix.length;
        int columns = matrix[0].length;
        ArrayList<Integer> res = new ArrayList<>();

        int top = 0;
        int left = 0;
        int right = columns - 1;
        int bottom = row - 1;

        while (top <= bottom && left <= right) {
            for (int i = left; i <= right; i++) { // Traverse from left to right
                res.add(matrix[top][i]);
            }
            top++;

            for (int i = top; i <= bottom; i++) { // Traverse from top to bottom
                res.add(matrix[i][right]);
            }
            right--;

            if (top <= bottom) {
                for (int i = right; i >= left; i--) { // Traverse from right to left
                    res.add(matrix[bottom][i]);
                }
                bottom--;
            }

            if (left <= right) {
                for (int i = bottom; i >= top; i--) { // Traverse from bottom to top
                    res.add(matrix[i][left]);
                }
                left++;
            }
        }


        return res;
    }
}
