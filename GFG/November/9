class Solution {
    String minSum(int[] arr) {
        Arrays.sort(arr); 
        
        StringBuilder sb1 = new StringBuilder();
        StringBuilder sb2 = new StringBuilder();
        
        // Distribute numbers between sb1 and sb2 alternately
        for (int i = 0; i < arr.length; i++) {
            if (i % 2 == 0) {
                sb1.append(arr[i]);
            } else {
                sb2.append(arr[i]);
            }
        }
        
        // Sum the two constructed numbers
        return addStrings(sb1.toString(), sb2.toString());
    }
    
    public String addStrings(String s1, String s2) {
        StringBuilder sb = new StringBuilder();
        
        int i = s1.length() - 1;
        int j = s2.length() - 1;
        int carry = 0;
        
        while (i >= 0 || j >= 0 || carry != 0) {
            int digit1 = i >= 0 ? s1.charAt(i) - '0' : 0;
            int digit2 = j >= 0 ? s2.charAt(j) - '0' : 0;
            
            int sum = digit1 + digit2 + carry;
            carry = sum / 10;
            sb.append(sum % 10);
            
            i--;
            j--;
        }
        while (sb.length() > 1 && sb.charAt(sb.length() - 1) == '0') {
            sb.setLength(sb.length() - 1);
        }
        
        return sb.reverse().toString();
    }
}
