class Solution {
    public int[] maximumBeauty(int[][] items, int[] queries) {
        Arrays.sort(items, (a, b) -> a[0] - b[0]);
        int[] res = new int[items.length];
        int[] ans = new int[queries.length];
        
        
        res[0] = items[0][1];
        for (int i = 1; i < items.length; i++) {
            res[i] = Math.max(res[i - 1], items[i][1]);
        }

        // Process each query using binary search
        for (int i = 0; i < queries.length; i++) {
            int index = binarySearch(items, queries[i]);
            ans[i] = index == -1 ? 0 : res[index];
        }
        return ans;
    }

    
    public int binarySearch(int[][] items, int n) {
        int start = 0;
        int end = items.length - 1;
        int res = -1;
        
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (items[mid][0] <= n) {
                res = mid;  
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return res;
    }
}
