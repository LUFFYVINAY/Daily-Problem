class Solution {
    public int[] decrypt(int[] code, int k) {
        int n = code.length;
        int[] temp = new int[n];

        for (int i = 0; i < n; i++) {
            if (k > 0) {
                // Sum the next k elements
                int sum = 0;
                for (int j = 1; j <= k; j++) {
                    int index = (i + j) % n; // Wrap around using modulo
                    sum += code[index];
                }
                temp[i] = sum;
            } else if (k < 0) {
                // Sum the previous k elements (moving backwards)
                int sum = 0;
                for (int j = 1; j <= Math.abs(k); j++) {
                    int index = (i - j + n) % n; // Wrap around using modulo
                    sum += code[index];
                }
                temp[i] = sum;
            } else {
                // k == 0, result is always 0
                temp[i] = 0;
            }
        }
        return temp; // Return the computed array
    }
}
