class Solution {
    public int minimizedMaximum(int n, int[] quantities) {
        int start =1;
        int end = Arrays.stream(quantities).max().getAsInt();
        int res =-1;
        while(start<=end){
            int mid = start + (end-start)/2;
            if(isValid(quantities,mid,n)){
                res = mid;
                end = mid-1;

            }
            else{
                start = mid+1;
            }
        }
        return res;
    }

    public boolean isValid(int []quantities,int mid, int n){
        int stores=0;
        for(int num:quantities){
            stores+=num/mid;
            if(num % mid !=0){
                stores++;
            }
        }
        if(stores>n)return false;

        return true;
    }

}
