class Solution {
    // Function to determine if array arr can be split into three equal sum sets.
    public List<Integer> findSplit(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }

        // If sum is not divisible by 3, return [-1, -1]
        if (sum % 3 != 0) {
            return Arrays.asList(-1, -1);
        }

        List<Integer> st = new ArrayList<>();
        int count = 0;
        int currentSum = 0;

        for (int right = 0, left = 0; right < arr.length; right++) {
            currentSum += arr[right];

            if (currentSum == sum / 3 && count < 3) {
                st.add(right);
                left = right + 1;
                currentSum = 0;
                count++;
            }
        }

        // If we don't find exactly 3 parts, return [-1, -1]
        if (count != 3) {
            return Arrays.asList(-1, -1);
        }

        return st;
    }
}
