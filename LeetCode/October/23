/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode replaceValueInTree(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        ArrayList<Integer> levelsum = new ArrayList<>();

        q.offer(root);
        while(!q.isEmpty()){
            int size = q.size();
            int sum =0;
            for(int i=0;i<size;i++){
                TreeNode temp = q.poll();
                sum+=temp.val;
                if(temp.left!=null){
                    q.offer(temp.left);
                }
                if(temp.right!=null){
                    q.offer(temp.right);
                }
            }
            levelsum.add(sum);
        }

        int level =0;
        q.offer(root);
        root.val =0;

        while(!q.isEmpty()){
            int size = q.size();
            for(int i=0;i<size;i++){
                int sum =0;

                TreeNode temp = q.poll();
                if(temp.left!=null){
                    sum+=temp.left.val;
                }
                if(temp.right!=null){
                    sum+=temp.right.val;
                }
                if(temp.left!=null){
                    temp.left.val = levelsum.get(level+1) - sum;
                    q.offer(temp.left);
                }
                if(temp.right!=null){
                    temp.right.val = levelsum.get(level+1) - sum;
                    q.offer(temp.right);
                }

            }
            level++;
        }
        return root;
    }
}
