class GfG {
    public static Node quickSort(Node node) {
    
      
       int count=0;
        Node temp=node;
       while(temp!=null){
           temp=temp.next;
           count++;
       }
        int i=0;
        Node arr[]=new Node[count];
        while(node !=null){
            arr[i]=node;
            node=node.next;
            i++;
        }
        // System.out.println(Arrays.toString(arr));
        quicksort(arr,0,count-1);
        Node prev=arr[0];
        for(int j=1;j<count;j++){
            prev.next=arr[j];
            prev=prev.next;
        }
        arr[count-1].next=null;
        return arr[0];
    
    }
    
   static int arrange(Node arr[],int i,int j){
        
        int position=i;
        for(int k=i;k<j;k++){
            if(arr[k].data<arr[j].data){
                Node temp=arr[position];
                arr[position]=arr[k];
                arr[k]=temp;
                position++;
            }
        }
                Node temp=arr[position];
                arr[position]=arr[j];
                arr[j]=temp;
                
                return position;
            }
        
    
    
    static void quicksort(Node arr[],int i,int j){
        
        if(i<j){
            
           int p= arrange(arr,i,j);
            quicksort(arr,i,p-1);
            quicksort(arr,p+1,j);
            
            
        }
    }
}
